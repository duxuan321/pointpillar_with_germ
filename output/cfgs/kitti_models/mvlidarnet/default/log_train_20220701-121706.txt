2022-07-01 12:17:06,858   INFO  **********************Start logging**********************
2022-07-01 12:17:06,858   INFO  CUDA_VISIBLE_DEVICES=ALL
2022-07-01 12:17:06,859   INFO  cfg_file         ./cfgs/kitti_models/mvlidarnet.yaml
2022-07-01 12:17:06,859   INFO  batch_size       32
2022-07-01 12:17:06,859   INFO  epochs           80
2022-07-01 12:17:06,859   INFO  workers          4
2022-07-01 12:17:06,859   INFO  extra_tag        default
2022-07-01 12:17:06,859   INFO  ckpt             None
2022-07-01 12:17:06,859   INFO  pretrained_model None
2022-07-01 12:17:06,859   INFO  launcher         none
2022-07-01 12:17:06,859   INFO  tcp_port         18888
2022-07-01 12:17:06,859   INFO  sync_bn          False
2022-07-01 12:17:06,859   INFO  fix_random_seed  False
2022-07-01 12:17:06,859   INFO  ckpt_save_interval 1
2022-07-01 12:17:06,859   INFO  local_rank       0
2022-07-01 12:17:06,859   INFO  max_ckpt_save_num 30
2022-07-01 12:17:06,859   INFO  merge_all_iters_to_one_epoch False
2022-07-01 12:17:06,859   INFO  set_cfgs         None
2022-07-01 12:17:06,859   INFO  max_waiting_mins 0
2022-07-01 12:17:06,859   INFO  start_epoch      0
2022-07-01 12:17:06,859   INFO  num_epochs_to_eval 0
2022-07-01 12:17:06,859   INFO  save_to_file     False
2022-07-01 12:17:06,859   INFO  cfg.ROOT_DIR: /home/yantingxin/workspace/MVlidarNet_pcdet
2022-07-01 12:17:06,859   INFO  cfg.LOCAL_RANK: 0
2022-07-01 12:17:06,859   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2022-07-01 12:17:06,859   INFO  
cfg.DATA_CONFIG = edict()
2022-07-01 12:17:06,859   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2022-07-01 12:17:06,859   INFO  cfg.DATA_CONFIG.DATA_PATH: /home/yantingxin/workspace/dataset/kitti
2022-07-01 12:17:06,859   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2022-07-01 12:17:06,859   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2022-07-01 12:17:06,859   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2022-07-01 12:17:06,859   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2022-07-01 12:17:06,859   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2022-07-01 12:17:06,860   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2022-07-01 12:17:06,860   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_bev', 'VOXEL_SIZE': [0.1, 0.1, 4]}]
2022-07-01 12:17:06,860   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2022-07-01 12:17:06,860   INFO  
cfg.MODEL = edict()
2022-07-01 12:17:06,860   INFO  cfg.MODEL.NAME: CenterPoint
2022-07-01 12:17:06,860   INFO  
cfg.MODEL.VFE = edict()
2022-07-01 12:17:06,860   INFO  cfg.MODEL.VFE.NAME: PlaceHolderVFE
2022-07-01 12:17:06,860   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2022-07-01 12:17:06,860   INFO  cfg.MODEL.BACKBONE_2D.NAME: MVLidarNetBackbone
2022-07-01 12:17:06,860   INFO  cfg.MODEL.BACKBONE_2D.MULTI_INPUT_CHANNELS: [3, 7]
2022-07-01 12:17:06,860   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorFreeSingle
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.MAX_OBJECTS: 100
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2022-07-01 12:17:06,860   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2022-07-01 12:17:06,860   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 1.0
2022-07-01 12:17:06,860   INFO  
cfg.MODEL.DENSE_HEAD.POST_PROCESSING = edict()
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.SCORE_THRESH: 0.2
2022-07-01 12:17:06,860   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.PRE_MAX_SIZE: 100
2022-07-01 12:17:06,861   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POST_PROCESS_STYLE: anchor_free
2022-07-01 12:17:06,861   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2022-07-01 12:17:06,861   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2022-07-01 12:17:06,861   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2022-07-01 12:17:06,861   INFO  
cfg.OPTIMIZATION = edict()
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 16
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.LR: 0.003
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2022-07-01 12:17:06,861   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2022-07-01 12:17:06,861   INFO  cfg.TAG: mvlidarnet
2022-07-01 12:17:06,861   INFO  cfg.EXP_GROUP_PATH: cfgs/kitti_models
2022-07-01 12:17:07,059   INFO  Database filter by min points Car: 14357 => 13532
2022-07-01 12:17:07,059   INFO  Database filter by min points Pedestrian: 2207 => 2168
2022-07-01 12:17:07,060   INFO  Database filter by min points Cyclist: 734 => 705
2022-07-01 12:17:07,074   INFO  Database filter by difficulty Car: 13532 => 10759
2022-07-01 12:17:07,077   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2022-07-01 12:17:07,078   INFO  Database filter by difficulty Cyclist: 705 => 581
2022-07-01 12:17:07,082   INFO  Loading KITTI dataset
2022-07-01 12:17:07,161   INFO  Total samples for KITTI dataset: 3712
2022-07-01 12:17:10,190   INFO  ==> Loading parameters from checkpoint /home/yantingxin/workspace/MVlidarNet_pcdet/output/cfgs/kitti_models/mvlidarnet/default/ckpt/checkpoint_epoch_2.pth to GPU
2022-07-01 12:17:10,232   INFO  ==> Loading optimizer parameters from checkpoint /home/yantingxin/workspace/MVlidarNet_pcdet/output/cfgs/kitti_models/mvlidarnet/default/ckpt/checkpoint_epoch_2.pth to GPU
2022-07-01 12:17:10,238   INFO  ==> Done
2022-07-01 12:17:10,239   INFO  CenterPoint(
  (vfe): PlaceHolderVFE()
  (backbone_3d): None
  (map_to_bev_module): None
  (pfe): None
  (backbone_2d): MVLidarNetBackbone(
    (height): Sequential(
      (0): Sequential(
        (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): Sequential(
        (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (3): Sequential(
        (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (block1a): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block1b): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block2a): Sequential(
      (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block2b): Sequential(
      (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block3a): Sequential(
      (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (block3b): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up1a): Sequential(
      (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up1c): Sequential(
      (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up2a): Sequential(
      (0): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (up2c): Sequential(
      (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (dense_head): AnchorFreeSingle(
    (anchor_free_loss): Compute_Loss(
      (focal_loss): FocalLoss()
      (l1_loss): L1Loss()
      (l1_loss_balanced): L1Loss_Balanced()
    )
    (classhead): Sequential(
      (0): Sequential(
        (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (bboxhead): Sequential(
      (0): Sequential(
        (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv_cls): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_box): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (point_head): None
  (roi_head): None
)
2022-07-01 12:17:10,240   INFO  **********************Start training cfgs/kitti_models/mvlidarnet(default)**********************
